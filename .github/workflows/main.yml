name: PyAER Build and Test

on:
  push:
  release:
    types: [published]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ["3.6", "3.7", "3.8"]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Ubuntu dependencies
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          gcc --version;
          sudo apt-get install build-essential -y;
          sudo apt-get install libusb-1.0-0-dev -y;
          sudo apt-get install cmake -y;
      - name: Install macos dependencies
        if: ${{ matrix.os == 'macos-latest' }}
        run: |
          gcc --version;
          brew install automake;
          brew install bison;
      - name: Install PyAER specific dependencies
        run: |
          $GITHUB_WORKSPACE/install-libcaer.sh ci
          git clone https://github.com/duguyue100/swig
          cd swig
          ./autogen.sh
          ./configure --without-alllang --with-python=$(command -v python) --without-pcre
          make
          sudo make install
          cd ..
          pip install pip -U
          pip install numpy==1.18.0
          pip install future -U
          pip install wheel
      - name: Build PyAER
        run: |
          make build-wheel
          make build-wheel
          make install
      - name: Find and manage file
        run: |
            cd $GITHUB_WORKSPACE/dist
            ls -a
            for file in *.whl ; do mv $file ${file//linux/manylinux1} ; done;
            rm *.egg;
            ls -a
            cd ..
      - name: Publish package to Github releases
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: dist/*.*
          tag: ${{ github.ref }}
          file_glob: true
      - name: Publish package to PyPI
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          verbose: true
