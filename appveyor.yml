environment:
    matrix:
        - compiler: msys2
          ARCH: x64
          PYTHON_VERSION: "2.7"
          PYTHON: python3
          MSYS2_ARCH: x86_64
          MSYS2_DIR: msys64
          MSYSTEM: MINGW64
          MINICONDA: Miniconda-x64
        - compiler: msys2
          ARCH: x64
          PYTHON_VERSION: "3.4"
          PYTHON: python3
          MSYS2_ARCH: x86_64
          MSYS2_DIR: msys64
          MSYSTEM: MINGW64
          MINICONDA: Miniconda-x64
        - compiler: msys2
          ARCH: x64
          PYTHON_VERSION: "3.5"
          PYTHON: python3
          MSYS2_ARCH: x86_64
          MSYS2_DIR: msys64
          MSYSTEM: MINGW64
          MINICONDA: Miniconda-x64
        - compiler: msys2
          ARCH: x64
          PYTHON_VERSION: "3.6"
          PYTHON: python3
          MSYS2_ARCH: x86_64
          MSYS2_DIR: msys64
          MSYSTEM: MINGW64
          MINICONDA: Miniconda-x64
        - compiler: msys2
          ARCH: x64
          PYTHON_VERSION: "3.7"
          PYTHON: python3
          MSYS2_ARCH: x86_64
          MSYS2_DIR: msys64
          MSYSTEM: MINGW64
          MINICONDA: Miniconda-x64
deploy:
  provider: GitHub
  description: ''
  auth_token:
    secure: QE/sriy9Y07epK5S7dQvJqzStTbHuncavO4ODI7tJVRhR26YDL819doQed6tfT2C
  artifact: /.*\.whl/              # upload all wheel files to release assets
  draft: false
  prerelease: false
  on:
    appveyor_repo_tag: true        # deploy on tag push only

platform:
    - x64

matrix:
    fast_finish: true

install:
    - set PATH=C:\%MINICONDA%\Scripts;%PATH%
    - cd C:\%MSYS2_DIR%\home
    - git clone https://github.com/inilabs/libcaer
    - git clone https://github.com/duguyue100/swig
    - conda config --set always_yes yes --set changeps1 no
    - conda update --yes conda
    - conda create -q --name python%PYTHON_VERSION% python=%PYTHON_VERSION% -c conda-forge
    - activate python%PYTHON_VERSION%
    - pip install --user pip -U
    - pip install numpy==1.16.1
    - pip install future -U
    - conda list
    - if [%PYTHON_VERSION%]==[3.5] (
      C:\%MSYS2_DIR%\usr\bin\bash -lc "cp /c/projects/pyaer/res/cygwinccompiler-py35.py /c/%MINICONDA%/envs/python%PYTHON_VERSION%/Lib/distutils/cygwinccompiler.py"
      &&
      C:\%MSYS2_DIR%\usr\bin\bash -lc "cp /c/%MINICONDA%/envs/python%PYTHON_VERSION%/vcruntime140.dll /c/%MINICONDA%/envs/python%PYTHON_VERSION%/libs"
      &&
      C:\%MSYS2_DIR%\usr\bin\bash -lc "echo 'File copied'"
      )
    - if [%PYTHON_VERSION%]==[3.6] (
      C:\%MSYS2_DIR%\usr\bin\bash -lc "cp /c/projects/pyaer/res/cygwinccompiler-py36.py /c/%MINICONDA%/envs/python%PYTHON_VERSION%/Lib/distutils/cygwinccompiler.py"
      &&
      C:\%MSYS2_DIR%\usr\bin\bash -lc "cp /c/%MINICONDA%/envs/python%PYTHON_VERSION%/vcruntime140.dll /c/%MINICONDA%/envs/python%PYTHON_VERSION%/libs"
      &&
      C:\%MSYS2_DIR%\usr\bin\bash -lc "echo 'File copied'"
      )
    - if [%PYTHON_VERSION%]==[3.7] (
      C:\%MSYS2_DIR%\usr\bin\bash -lc "cp /c/projects/pyaer/res/cygwinccompiler-py37.py /c/%MINICONDA%/envs/python%PYTHON_VERSION%/Lib/distutils/cygwinccompiler.py"
      &&
      C:\%MSYS2_DIR%\usr\bin\bash -lc "cp /c/%MINICONDA%/envs/python%PYTHON_VERSION%/vcruntime140.dll /c/%MINICONDA%/envs/python%PYTHON_VERSION%/libs"
      &&
      C:\%MSYS2_DIR%\usr\bin\bash -lc "echo 'File copied'"
      )
    - C:\%MSYS2_DIR%\usr\bin\pacman --noconfirm -S mingw-w64-x86_64-gcc
    - C:\%MSYS2_DIR%\usr\bin\pacman --noconfirm -S make mingw-w64-x86_64-cmake
    - C:\%MSYS2_DIR%\usr\bin\pacman --noconfirm -S mingw-w64-x86_64-pkg-config
    - C:\%MSYS2_DIR%\usr\bin\pacman --noconfirm -S mingw-w64-x86_64-libusb
    - C:\%MSYS2_DIR%\usr\bin\pacman --noconfirm -S automake bison
    - C:\%MSYS2_DIR%\usr\bin\bash -lc "/c/projects/pyaer/install-libcaer.sh ci"
    - C:\%MSYS2_DIR%\usr\bin\bash -lc "cd /home/swig && ./autogen.sh && ./configure --without-alllang --with-python=$(command -v python) --without-pcre && make -j4 && make install"
    - C:\%MSYS2_DIR%\usr\bin\bash -lc "cd /c/projects/pyaer && make build-win && make build-wheel && make build-wheel"
    - >
      IF "%APPVEYOR_REPO_TAG%" == "true"
      (
      pip install twine
      &&
      cd C:\projects\pyaer
      &&
      twine upload -u %TWINE_USERNAME% -p %TWINE_PASSWORD% dist/*.whl
      )

build: off

artifacts:
    - path: "dist\\*.whl"
      name: Wheels
