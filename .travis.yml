cache:
  directories:
    - $HOME/download
    - $HOME/.cache/pip

language: generic

matrix:
    include:
        - os: linux
          sudo: required
          env: TOXENV=py27
        - os: linux
          sudo: required
          env: TOXENV=py36
        - os: osx
          sudo: required
          env: TOXENV=py27
        - os: osx
          sudo: required
          env: TOXENV=py36



deploy:
  provider: releases
  api_key: $GITHUB_TOKEN 
  file_glob: true
  file: dist/*.whl
  skip_cleanup: true
  on:
    tags: true

before_install:
    - mkdir -p download
    - cd download
    - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
        brew install wget;
      fi
    - if [[ "$TOXENV" == "py27" ]]; then
        if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
            wget https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh -O miniconda.sh;
        else
            wget https://repo.continuum.io/miniconda/Miniconda2-latest-MacOSX-x86_64.sh -O miniconda.sh;
        fi 
      else
        if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
            wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
        else
            wget https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -O miniconda.sh;
        fi 
      fi
    - chmod +x miniconda.sh
    - ./miniconda.sh -b -p $HOME/miniconda
    - cd ..
    - export PATH=/home/travis/miniconda/bin:$PATH
    - conda info -a
    - conda update --yes conda
    - conda install --yes pip
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
        sudo apt-add-repository -y "ppa:ubuntu-toolchain-r/test";
        sudo apt-get -qq update;
        sudo apt-get -yq --no-install-suggests --no-install-recommends --force-yes install gcc-5 g++-5;
        sudo unlink /usr/bin/gcc && sudo ln -s /usr/bin/gcc-5 /usr/bin/gcc;
        sudo unlink /usr/bin/g++ && sudo ln -s /usr/bin/g++-5 /usr/bin/g++;
        gcc --version;
      fi
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
        sudo apt-get install build-essential -y;
        sudo apt-get install libusb-1.0-0-dev -y;
        sudo apt-get install automake -y;
        sudo apt-get install bison -y;
      else
        brew install libusb;
        brew install automake;
        brew install bison;
      fi
    - git clone https://github.com/inilabs/libcaer
    - cd libcaer
    - cmake -DCMAKE_INSTALL_PREFIX=/usr .
    - make
    - sudo make install
    - cd ..
    - git clone https://github.com/duguyue100/swig
    - cd swig
    - ./autogen.sh
    - if [[ "$TOXENV" == "py27" ]]; then
        ./configure --with-python=$(command -v python) --without-python3;
      else
        ./configure --with-python=$(command -v python) --without-python2;
      fi
    - make
    - sudo make install
    - cd ..

install:
    - pip install numpy
    - pip install future
    - pip install wheel
    - conda list

script:
    - make build-wheel
    - make build-wheel
    - make install
    - python -c 'import pyaer; print(dir(pyaer))'

branches:
  except:
    - refactor-compiling

notifications:
  email: false
